---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=e1c26902efd7893644587d792188237b&query=Big
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.9.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Tue, 30 Jan 2024 22:45:16 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=6403
      X-Memc:
      - HIT
      X-Memc-Key:
      - '008cb1b0f67a5af70e2671b46c5af373'
      X-Memc-Age:
      - '17153'
      X-Memc-Expires:
      - '6403'
      Etag:
      - W/"dbc6df8c1529fea2e1579d2c5c9773d0"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 bae6de0befe82416d15a4f0db2e42a20.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - ATL58-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - idxmiJBtP8O_6676D_pBC-xSMaRcUlrhDw-gSKMsxc8qlsLAPWUnVQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 30 Jan 2024 22:45:16 GMT
recorded_with: VCR 6.2.0
